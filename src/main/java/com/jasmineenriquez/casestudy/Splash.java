
package com.jasmineenriquez.casestudy;

import java.awt.Color;
import java.awt.FontMetrics;
import java.awt.Graphics;
import java.awt.Graphics2D;
import javax.swing.JComponent;
import javax.swing.plaf.basic.BasicProgressBarUI;

/**
 *
 * @author Jasmine Enriquez
 */
public class Splash extends javax.swing.JFrame {
    
    /**
     * Creates new form Splash
     */
    public Splash() {
        initComponents();
        
        this.setBackground(new Color(0, 0, 0, 0));
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new RoundedPanel(new java.awt.Dimension(45,45),0);
        jLabel1 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(247, 237, 227));
        jPanel1.setPreferredSize(new java.awt.Dimension(450, 450));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/jasmineenriquez/casestudy/logo.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 50, 390, -1));

        jProgressBar1.setUI(new CustomProgressBarUI());
        jProgressBar1.setBackground(new java.awt.Color(133, 88, 111));
        jProgressBar1.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jProgressBar1.setForeground(new java.awt.Color(178, 140, 151));
        jProgressBar1.setBorder(null);
        jProgressBar1.setBorderPainted(false);
        jProgressBar1.setStringPainted(true);
        jPanel1.add(jProgressBar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 212, 408, 15));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 420, 270));

        setSize(new java.awt.Dimension(504, 347));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    static class CustomProgressBarUI extends BasicProgressBarUI {
        @Override
        protected Color getSelectionForeground() {
            return Color.WHITE; // Set the text foreground color
        }
        
        @Override
        protected Color getSelectionBackground() {
            return new Color(178, 140, 151); // Set the text background color
        }
        
        @Override
        protected void paintDeterminate(Graphics g, JComponent c) {
            Graphics2D g2d = (Graphics2D) g.create();
            
            // Set the background color
            g2d.setColor(new Color(133, 88, 111));
            g2d.fillRect(0, 0, progressBar.getWidth(), progressBar.getHeight());
            
            // Set the foreground color
            g2d.setColor(new Color(178, 140, 151));
            int width = (int) (progressBar.getWidth() * (float) progressBar.getValue() / progressBar.getMaximum());
            g2d.fillRect(0, 0, width, progressBar.getHeight());
            
            // Paint the progress bar's text
            String text = String.valueOf(progressBar.getValue()) + "%";
            FontMetrics fm = progressBar.getFontMetrics(progressBar.getFont());
            int x = (progressBar.getWidth() - fm.stringWidth(text)) / 2;
            int y = (progressBar.getHeight() - fm.getHeight()) / 2 + fm.getAscent();
            g2d.setColor(new Color(178, 140, 151)); // Set the text background color
            g2d.drawString(text, x + 1, y + 1);
            g2d.setColor(Color.WHITE); // Set the text foreground color
            g2d.drawString(text, x, y);
            g2d.dispose();
        }
    }
    
    



    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Splash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Splash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Splash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Splash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Splash().setVisible(true);
              
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    public javax.swing.JProgressBar jProgressBar1;
    // End of variables declaration//GEN-END:variables
}
